#!/bin/bash
set -euo pipefail

# Couleurs
RED='\033[0;31m'    ; GREEN='\033[0;32m'
YELLOW='\033[0;33m' ; BLUE='\033[0;34m'
MAGENTA='\033[0;35m'; CYAN='\033[0;36m'
NC='\033[0m'        # No Color

display_banner() {
    clear
    echo -e "${BLUE}"
    echo "  _____                       _ _           _____                  "
    echo " / ____|                     (_) |         / ____|                 "
    echo "| (___   ___  ___ _   _ _ __ _| |_ _   _ | (___   ___ __ _ _ __   "
    echo " \___ \ / _ \/ __| | | | '__| | __| | | | \___ \ / __/ _\` | '_ \  "
    echo " ____) |  __/ (__| |_| | |  | | |_| |_| | ____) | (_| (_| | | | | "
    echo "|_____/ \___|\___|\__,_|_|  |_|\__|\__, ||_____/ \___\__,_|_| |_| "
    echo "                                     __/ |                         "
    echo "                                    |___/                          "
    echo -e "${NC}"
    echo -e "${YELLOW}Automated Security Audit Script${NC}"
    echo -e "${CYAN}------------------------------------------${NC}"
    echo -e "${GREEN}Developed by mpgamer75 (optimized)${NC}"
    echo -e "${YELLOW}Version 1.2.2${NC}"
    echo -e "${CYAN}==========================================${NC}"
}

show_help_and_exit() {
    echo -e "${RED}Interrupted or invalid input.${NC}"
    exit 1
}

# Vérification des outils
check_tools() {
    local missing=()
    for t in nmap masscan whatweb dirb nikto gobuster sqlmap nuclei; do
        if ! command -v "$t" &>/dev/null; then
            missing+=("$t")
        fi
    done
    if [ ${#missing[@]} -gt 0 ]; then
        echo -e "${RED}[ERROR] Missing tools: ${missing[*]}.${NC}"
        echo -e "${YELLOW}Please install them (e.g. sudo apt install ${missing[*]})${NC}"
        exit 1
    fi
}

prepare_output() {
    OUTDIR="scan_$(date +'%Y%m%d_%H%M%S')"
    mkdir -p "$OUTDIR"
    echo -e "${GREEN}[INFO] Results directory: $OUTDIR${NC}"
}

# Scans
run_scans() {
    echo -e "${CYAN}[SCAN] Nmap (fast)...${NC}"
    nmap -n -T4 -F "$TARGET" -oN "$OUTDIR/nmap_fast.txt" &
    echo -e "${CYAN}[SCAN] Nmap (full)...${NC}"
    nmap -n -T4 -p- -sS -sV -A "$TARGET" -oN "$OUTDIR/nmap_full.txt" &
    echo -e "${CYAN}[SCAN] Masscan...${NC}"
    masscan "$TARGET" -p1-65535 --rate=10000 -oL "$OUTDIR/masscan.txt" &
    if [ -n "$URL" ]; then
        echo -e "${CYAN}[SCAN] WhatWeb...${NC}"
        whatweb "$URL" -v > "$OUTDIR/whatweb.txt" &
        echo -e "${CYAN}[SCAN] Dirb...${NC}"
        dirb "$URL" -o "$OUTDIR/dirb.txt" &
        echo -e "${CYAN}[SCAN] Gobuster...${NC}"
        gobuster dir -u "$URL" -w /usr/share/wordlists/dirb/common.txt -t 50 -o "$OUTDIR/gobuster.txt" &
        echo -e "${CYAN}[SCAN] Nikto...${NC}"
        nikto -h "$URL" -o "$OUTDIR/nikto.txt" &
        echo -e "${CYAN}[SCAN] SQLMap...${NC}"
        sqlmap -u "$URL" --batch --level=2 --risk=1 --output-dir="$OUTDIR/sqlmap" &
        echo -e "${CYAN}[SCAN] Nuclei...${NC}"
        nuclei -u "$URL" -o "$OUTDIR/nuclei.txt" &
    fi
    wait
}

generate_txt_summary() {
    local file="$OUTDIR/summary.txt"
    {
      echo "========================================"
      echo "         SECURITY SCAN SUMMARY"
      echo "========================================"
      echo
      echo "TARGET IP : $TARGET"
      [ -n "$URL" ] && echo "TARGET URL: $URL"
      echo "DATE      : $(date)"
      echo
      echo "Results directory: $OUTDIR"
      echo
      echo "Generated files:"
      for f in nmap_fast.txt nmap_full.txt masscan.txt whatweb.txt dirb.txt gobuster.txt nikto.txt nuclei.txt; do
        [ -e "$OUTDIR/$f" ] && echo "- $f"
      done
      [ -d "$OUTDIR/sqlmap" ] && echo "- sqlmap/ (directory)"
      echo
      echo "End of report."
    } > "$file"
    echo -e "${GREEN}[SUCCESS] TXT summary saved to: $file${NC}"
}

generate_json_summary() {
    local file="$OUTDIR/summary.json"
    {
      echo "{"
      echo "  \"target_ip\": \"$TARGET\","
      [ -n "$URL" ] && echo "  \"target_url\": \"$URL\","
      echo "  \"date\": \"$(date)\","
      echo "  \"output_dir\": \"$OUTDIR\","
      echo "  \"files\": ["
      local first=true
      for f in nmap_fast.txt nmap_full.txt masscan.txt whatweb.txt dirb.txt gobuster.txt nikto.txt nuclei.txt; do
        if [ -e "$OUTDIR/$f" ]; then
          if [ "$first" = true ]; then first=false; else echo ","; fi
          echo -n "    \"$f\""
        fi
      done
      if [ -d "$OUTDIR/sqlmap" ]; then
        if [ "$first" = false ]; then echo ","; fi
        echo "    \"sqlmap/\""
      fi
      echo
      echo "  ]"
      echo "}"
    } > "$file"
    echo -e "${GREEN}[SUCCESS] JSON summary saved to: $file${NC}"
}

# --- MAIN ---

display_banner

# 1) Demande de l'IP
read -rp "Enter target IP: " TARGET
[ -z "$TARGET" ] && { echo -e "${RED}[ERROR] No IP provided.${NC}"; exit 1; }

# 2) Demande de l'URL (optionnel)
read -rp "Enter target URL (or leave blank to skip web scans): " URL

# Vérification des outils et préparation
check_tools
prepare_output

# 3) Lancement des scans
run_scans

# 4) Choix du format de rapport
echo
echo "Choose report format:"
echo "1) TXT"
echo "2) JSON"
read -rp "Format [1]: " fmt_choice
fmt_choice=${fmt_choice:-1}

if [ "$fmt_choice" -eq 2 ]; then
  generate_json_summary
else
  generate_txt_summary
fi

# 5) Message de succès
echo
echo -e "${GREEN}All scans completed. Reports are in '$OUTDIR'.${NC}"
echo -e "${YELLOW}Thank you for using the security scanner!${NC}"
