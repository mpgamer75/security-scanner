#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
GOLD='\033[1;33m'       
NC='\033[0m'

#bannière 

display_banner() {
    clear
    echo -e "${BLUE}"
    echo "  _____                       _ _           _____                  "
    echo " / ____|                     (_) |         / ____|                 "
    echo "| (___   ___  ___ _   _ _ __ _| |_ _   _ | (___   ___ __ _ _ __   "
    echo " \___ \ / _ \/ __| | | | '__| | __| | | | \___ \ / __/ _\` | '_ \  "
    echo " ____) |  __/ (__| |_| | |  | | |_| |_| | ____) | (_| (_| | | | | "
    echo "|_____/ \___|\___|\__,_|_|  |_|\__|\__, ||_____/ \___\__,_|_| |_| "
    echo "                                     __/ |                         "
    echo "                                    |___/                          "
    echo -e "${NC}"
    echo -e "${YELLOW}Script d'analyse de sécurité automatisé${NC}"
    echo -e "${CYAN}------------------------------------------${NC}"
    echo -e "${GREEN}Développé par mpgamer75${NC}"
    echo -e "${GOLD}Version 1.0.1${NC}"
    echo -e "${RED}==========================================${NC}"
}

check_tool() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}[ERREUR] $1 n'est pas installé. Veuillez l'installer avant de continuer.${NC}"
        echo -e "${YELLOW}Commande d'installation suggérée: sudo apt install $1${NC}"
        exit 1
    fi
}

# vérifie si tous les outils sont bien installés
check_required_tools() {
    echo -e "${BLUE}[INFO] Vérification des outils requis...${NC}"
    check_tool nmap
    check_tool dirb
    check_tool nikto
    check_tool gobuster
    check_tool sqlmap
    echo -e "${GREEN}[OK] Tous les outils requis sont installés.${NC}"
}

# créer le dossier de sortie pour y mettre tous les résultats
create_output_dir() {
    OUTPUT_DIR="scan_results_$(date +'%Y-%m-%d %H:%M:%S' | tr ' ' '_')"
    mkdir -p "$OUTPUT_DIR"
    echo -e "${GREEN}[INFO] Les résultats seront enregistrés dans le dossier: $OUTPUT_DIR${NC}"
}

# nmap
run_nmap_scan() {
    echo -e "\n${CYAN}[SCAN] Lancement du scan NMAP...${NC}"
    echo -e "${YELLOW}Commande: nmap -sS -sV -Pn -A $IP_ADDRESS -oN $OUTPUT_DIR/nmap_scan.txt${NC}"
    
    nmap -sS -sV -Pn -A "$IP_ADDRESS" -oN "$OUTPUT_DIR/nmap_scan.txt"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}[SUCCÈS] Scan NMAP terminé. Résultats enregistrés dans $OUTPUT_DIR/nmap_scan.txt${NC}"
    else
        echo -e "${RED}[ERREUR] Échec du scan NMAP.${NC}"
    fi
}

# dirb
run_dirb_scan() {
    if [ -n "$WEBSITE_URL" ]; then
        echo -e "\n${CYAN}[SCAN] Lancement du scan DIRB...${NC}"
        echo -e "${YELLOW}Commande: dirb $WEBSITE_URL -o $OUTPUT_DIR/dirb_scan.txt${NC}"
        
        dirb "$WEBSITE_URL" -o "$OUTPUT_DIR/dirb_scan.txt"
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}[SUCCÈS] Scan DIRB terminé. Résultats enregistrés dans $OUTPUT_DIR/dirb_scan.txt${NC}"
        else
            echo -e "${RED}[ERREUR] Échec du scan DIRB.${NC}"
        fi
    else
        echo -e "${YELLOW}[INFO] Scan DIRB ignoré (aucune URL de site web fournie).${NC}"
    fi
}

# nikto
run_nikto_scan() {
    if [ -n "$WEBSITE_URL" ]; then
        echo -e "\n${CYAN}[SCAN] Lancement du scan NIKTO...${NC}"
        echo -e "${YELLOW}Commande: nikto -h $WEBSITE_URL -o $OUTPUT_DIR/nikto_scan.txt${NC}"
        
        nikto -h "$WEBSITE_URL" -o "$OUTPUT_DIR/nikto_scan.txt"
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}[SUCCÈS] Scan NIKTO terminé. Résultats enregistrés dans $OUTPUT_DIR/nikto_scan.txt${NC}"
        else
            echo -e "${RED}[ERREUR] Échec du scan NIKTO.${NC}"
        fi
    else
        echo -e "${YELLOW}[INFO] Scan NIKTO ignoré (aucune URL de site web fournie).${NC}"
    fi
}

# gobuster
run_gobuster_scan() {
    if [ -n "$WEBSITE_URL" ]; then
        echo -e "\n${CYAN}[SCAN] Lancement du scan GOBUSTER...${NC}"
        echo -e "${YELLOW}Commande: gobuster dir -u $WEBSITE_URL -w /usr/share/wordlists/dirb/common.txt -o $OUTPUT_DIR/gobuster_scan.txt${NC}"
        
        gobuster dir -u "$WEBSITE_URL" -w /usr/share/wordlists/dirb/common.txt -o "$OUTPUT_DIR/gobuster_scan.txt"
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}[SUCCÈS] Scan GOBUSTER terminé. Résultats enregistrés dans $OUTPUT_DIR/gobuster_scan.txt${NC}"
        else
            echo -e "${RED}[ERREUR] Échec du scan GOBUSTER.${NC}"
        fi
    else
        echo -e "${YELLOW}[INFO] Scan GOBUSTER ignoré (aucune URL de site web fournie).${NC}"
    fi
}

# sqlmap
run_sqlmap_scan() {
    if [ -n "$WEBSITE_URL" ]; then
        echo -e "\n${CYAN}[SCAN] Lancement du scan SQLMAP...${NC}"
        echo -e "${YELLOW}Commande: sqlmap -u $WEBSITE_URL --batch --level=1 --risk=1 -o -v 1 --output-dir=$OUTPUT_DIR${NC}"
        
        sqlmap -u "$WEBSITE_URL" --batch --level=1 --risk=1 -o -v 1 --output-dir="$OUTPUT_DIR"
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}[SUCCÈS] Scan SQLMAP terminé. Résultats enregistrés dans $OUTPUT_DIR/sqlmap${NC}"
        else
            echo -e "${RED}[ERREUR] Échec du scan SQLMAP.${NC}"
        fi
    else
        echo -e "${YELLOW}[INFO] Scan SQLMAP ignoré (aucune URL de site web fournie).${NC}"
    fi
}

# résumé
generate_summary() {
    SUMMARY_FILE="$OUTPUT_DIR/rapport_synthese.txt"
    echo "RAPPORT DE SYNTHÈSE DES SCANS DE SÉCURITÉ" > "$SUMMARY_FILE"
    echo "Date: $(date)" >> "$SUMMARY_FILE"
    echo "Adresse IP cible: $IP_ADDRESS" >> "$SUMMARY_FILE"
    if [ -n "$WEBSITE_URL" ]; then
        echo "URL du site web: $WEBSITE_URL" >> "$SUMMARY_FILE"
    fi
    echo "" >> "$SUMMARY_FILE"
    echo "Scans effectués:" >> "$SUMMARY_FILE"
    echo "- NMAP: $OUTPUT_DIR/nmap_scan.txt" >> "$SUMMARY_FILE"
    
    if [ -n "$WEBSITE_URL" ]; then
        echo "- DIRB: $OUTPUT_DIR/dirb_scan.txt" >> "$SUMMARY_FILE"
        echo "- NIKTO: $OUTPUT_DIR/nikto_scan.txt" >> "$SUMMARY_FILE"
        echo "- GOBUSTER: $OUTPUT_DIR/gobuster_scan.txt" >> "$SUMMARY_FILE"
        echo "- SQLMAP: $OUTPUT_DIR/sqlmap" >> "$SUMMARY_FILE"
    fi
    
    echo -e "${GREEN}[INFO] Rapport de synthèse généré: $SUMMARY_FILE${NC}"
}

main() {
    display_banner
    check_required_tools
    create_output_dir
    
    # demande l'adresse IP à l'utilisateur
    echo -e "${BLUE}Entrez l'adresse IP de la cible:${NC}"
    read IP_ADDRESS
    
    while [[ -z "$IP_ADDRESS" ]]; do
        echo -e "${RED}Erreur: L'adresse IP ne peut pas être vide.${NC}"
        echo -e "${BLUE}Entrez l'adresse IP de la cible:${NC}"
        read IP_ADDRESS
    done
    
    # website
    echo -e "${BLUE}Entrez l'URL du site web (laissez vide si non applicable):${NC}"
    read WEBSITE_URL
    
    echo -e "\n${MAGENTA}[DÉMARRAGE] Lancement des scans de sécurité...${NC}"
    echo -e "${BLUE}Cible IP: $IP_ADDRESS${NC}"
    if [ -n "$WEBSITE_URL" ]; then
        echo -e "${BLUE}Site web: $WEBSITE_URL${NC}"
    else
        echo -e "${YELLOW}Aucun site web spécifié. Seul le scan NMAP sera effectué.${NC}"
    fi
    
    
    run_nmap_scan
    run_dirb_scan
    run_nikto_scan
    run_gobuster_scan
    run_sqlmap_scan
    
    
    generate_summary
    
    echo -e "\n${GREEN}[TERMINÉ] Tous les scans ont été effectués.${NC}"
    echo -e "${BLUE}Les résultats sont disponibles dans le dossier: $OUTPUT_DIR${NC}"
}


main